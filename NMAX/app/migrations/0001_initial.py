# Generated by Django 5.0.6 on 2024-10-08 14:56

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', db_comment='权限名称', max_length=25, unique=True)),
                ('code', models.CharField(db_column='code', db_comment='权限表示码', max_length=32, unique=True)),
                ('description', models.CharField(db_column='description', db_comment='权限描述', max_length=255)),
            ],
            options={
                'db_table': 'permission',
                'db_table_comment': '权限表',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', db_comment='角色名称', max_length=50)),
                ('description', models.CharField(db_column='description', db_comment='角色描述', max_length=255)),
                ('enable', models.BooleanField(db_column='enable', db_comment='是否开启', default=True)),
                ('data_scope', models.CharField(db_column='data_scope', db_comment='数据作用范围', max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', db_comment='角色创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', db_comment='角色更新时间')),
            ],
            options={
                'db_table': 'roles',
                'db_table_comment': '角色表',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', db_comment='部门名称', max_length=50)),
                ('owner', models.CharField(db_column='owner', db_comment='部门主管', max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', db_comment='部门创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', db_comment='部门更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='app.departments')),
            ],
            options={
                'db_table': 'departments',
                'db_table_comment': '部门表',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_column='username', db_comment='用户名', max_length=32, unique=True)),
                ('nickname', models.CharField(db_column='nickname', db_comment='用户昵称', max_length=32, unique=True)),
                ('email', models.EmailField(db_column='email', db_comment='电子邮件地址', max_length=128)),
                ('password', models.CharField(db_column='password', db_comment='用户密码', max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', db_comment='用户创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', db_comment='用户更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('dept', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.departments')),
            ],
            options={
                'db_table': 'nm_users',
                'db_table_comment': '用户表',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', db_comment='菜单名称', max_length=50)),
                ('path', models.CharField(db_column='path', db_comment='跳转路径', max_length=255)),
                ('menu_type', models.CharField(db_column='menu_type', db_comment='菜单类型', max_length=255)),
                ('visible', models.BooleanField(db_column='visible', db_comment='是否可见', default=True)),
                ('created_at', models.DateTimeField(db_column='created_at', db_comment='菜单创建时间')),
                ('updated_at', models.DateTimeField(db_column='updated_at', db_comment='菜单更新时间')),
                ('parent', models.ForeignKey(blank=True, db_comment='上级菜单', db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.menu')),
            ],
            options={
                'db_table': 'menu',
                'db_table_comment': '菜单表',
                'ordering': ('-id',),
            },
        ),
    ]
